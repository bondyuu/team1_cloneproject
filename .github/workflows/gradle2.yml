# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Grant execute permission for gradlew
        run: chmod +x ./clone/gradlew
        
      - name: Gradle Init
        run: ./clone/gradlew init

      # Build
      - name: Build with Gradle
        run: ./clone/gradlew build --stacktrace

    # 전송할 파일을 담을 디렉토리 생성
      - name: Make Directory for deliver
        run: mkdir ./clone/deploy
        
      - name: see all list
        run: ls
      
      - name: move to directory
        run: cd clone && ls -al

    # Jar 파일 Copy
      - name: Copy Jar
        run: cp ./clone/build/libs/clone-0.0.1-SNAPSHOT.jar ./clone/deploy/

    # 압축파일 형태로 전달
      - name: Make zip file
        run: zip -r -qq -j ./clone/springboot-intro-build.zip ./clone/deploy

    # S3 Bucket으로 copy
      - name: Deliver to AWS S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp \
          --region ap-northeast-2 \
          --acl private \ 
          ./clone/springboot-intro-build.zip s3://springboot-intro-build/
